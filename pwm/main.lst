   1               		.file	"main.c"
   2               		.arch atmega8
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
  72               	.global	main
  74               	main:
  75               		.stabd	46,0,0
   1:main.c        **** //NOTES: #RS485-transceiver SN75176
   2:main.c        **** 
   3:main.c        **** #ifndef F_CPU
   4:main.c        **** #define F_CPU 16000000L
   5:main.c        **** #endif
   6:main.c        **** 
   7:main.c        **** #include <avr/io.h>
   8:main.c        **** #include <util/delay.h>
   9:main.c        **** 
  10:main.c        **** #include "ledm.h"
  11:main.c        **** 
  12:main.c        **** //PINOUT
  13:main.c        **** #define RED PD0
  14:main.c        **** #define GRN PD1
  15:main.c        **** #define CLK PD2
  16:main.c        **** #define BRT PD3
  17:main.c        **** #define RST PD4
  18:main.c        **** #define SEL PD5
  19:main.c        **** 
  20:main.c        **** //FUNCTION "main"
  21:main.c        **** int main (void) 
  22:main.c        **** {
  77               	.LM0:
  78               	/* prologue: frame size=512 */
  79 0000 C0E0      		ldi r28,lo8(__stack - 512)
  80 0002 D0E0      		ldi r29,hi8(__stack - 512)
  81 0004 DEBF      		out __SP_H__,r29
  82 0006 CDBF      		out __SP_L__,r28
  83               	/* prologue end (size=4) */
  23:main.c        **** 
  24:main.c        **** 	//RED and GREEN framebuffer, 2x 16*16byte
  25:main.c        **** 	//uint8_t fb_r[16][16];
  26:main.c        **** 	//uint8_t fb_g[16][16];
  27:main.c        **** 	uint8_t fb_r[16][16];	
  28:main.c        **** 	uint8_t fb_g[16][16];	
  29:main.c        **** 
  30:main.c        **** 	uint8_t x,y;
  31:main.c        **** 	
  32:main.c        **** 	uint8_t brt_loop=0;
  33:main.c        **** 	
  34:main.c        **** 	//flash LED to show the start of init process
  35:main.c        **** 	DDRB = 0xff;
  85               	.LM1:
  86 0008 8FEF      		ldi r24,lo8(-1)
  87 000a 87BB      		out 55-0x20,r24
  36:main.c        **** 	PORTB = 0x00;
  89               	.LM2:
  90 000c 18BA      		out 56-0x20,__zero_reg__
  91 000e 28E8      		ldi r18,lo8(5000)
  92 0010 33E1      		ldi r19,hi8(5000)
  93 0012 E0E9      		ldi r30,lo8(400)
  94 0014 F1E0      		ldi r31,hi8(400)
  95               	.L2:
  96               	.LBB2:
  97               	.LBB3:
  98               	.LBB4:
 100               	.Ltext1:
   1:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****    Copyright (c) 2007 Joerg Wunsch
   3:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****    All rights reserved.
   4:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
   5:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****    Redistribution and use in source and binary forms, with or without
   6:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****    modification, are permitted provided that the following conditions are met:
   7:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
   8:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****    * Redistributions of source code must retain the above copyright
   9:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer.
  10:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  11:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****      notice, this list of conditions and the following disclaimer in
  13:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****      the documentation and/or other materials provided with the
  14:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****      distribution.
  15:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  16:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****    * Neither the name of the copyright holders nor the names of
  17:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****      contributors may be used to endorse or promote products derived
  18:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****      from this software without specific prior written permission.
  19:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  20:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  32:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** /* $Id: delay_basic.h,v 1.1 2007/05/13 21:23:20 joerg_wunsch Exp $ */
  33:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  34:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** #ifndef _UTIL_DELAY_BASIC_H_
  35:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** #define _UTIL_DELAY_BASIC_H_ 1
  36:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  37:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** #include <inttypes.h>
  38:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  39:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** /** \file */
  40:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** /** \defgroup util_delay_basic <util/delay_basic.h>: Basic busy-wait delay loops
  41:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     \code
  42:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     #include <util/delay_basic.h>
  43:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     \endcode
  44:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  45:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     The functions in this header file implement simple delay loops
  46:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     that perform a busy-waiting.  They are typically used to
  47:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     facilitate short delays in the program execution.  They are
  48:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     implemented as count-down loops with a well-known CPU cycle
  49:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     count per loop iteration.  As such, no other processing can
  50:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     occur simultaneously.  It should be kept in mind that the
  51:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     functions described here do not disable interrupts.
  52:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  53:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     In general, for long delays, the use of hardware timers is
  54:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     much preferrable, as they free the CPU, and allow for
  55:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     concurrent processing of other events while the timer is
  56:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     running.  However, in particular for very short delays, the
  57:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     overhead of setting up a hardware timer is too much compared
  58:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     to the overall delay time.
  59:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  60:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     Two inline functions are provided for the actual delay algorithms.
  61:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  62:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** */
  63:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  64:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** #if !defined(__DOXYGEN__)
  65:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_1(uint8_t __count) __attribute__((always_inline));
  66:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** static inline void _delay_loop_2(uint16_t __count) __attribute__((always_inline));
  67:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** #endif
  68:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  69:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  70:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  71:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     Delay loop using an 8-bit counter \c __count, so up to 256
  72:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 256 would have to be passed
  73:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     as 0.)  The loop executes three CPU cycles per iteration, not
  74:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     including the overhead the compiler needs to setup the counter
  75:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     register.
  76:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  77:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to 768 microseconds
  78:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     can be achieved.
  79:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** */
  80:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** void
  81:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** _delay_loop_1(uint8_t __count)
  82:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** {
  83:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
  84:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 		"1: dec %0" "\n\t"
  85:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 		"brne 1b"
  86:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 		: "=r" (__count)
  87:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 		: "0" (__count)
  88:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 	);
  89:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** }
  90:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  91:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** /** \ingroup util_delay_basic
  92:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  93:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     Delay loop using a 16-bit counter \c __count, so up to 65536
  94:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     iterations are possible.  (The value 65536 would have to be
  95:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     passed as 0.)  The loop executes four CPU cycles per iteration,
  96:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     not including the overhead the compiler requires to setup the
  97:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     counter register pair.
  98:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 
  99:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     Thus, at a CPU speed of 1 MHz, delays of up to about 262.1
 100:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****     milliseconds can be achieved.
 101:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h ****  */
 102:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** void
 103:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** _delay_loop_2(uint16_t __count)
 104:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** {
 105:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay_basic.h **** 	__asm__ volatile (
 102               	.LM3:
 103 0016 CF01      		movw r24,r30
 104               	/* #APP */
 105 0018 0197      		1: sbiw r24,1
 106 001a F1F7      		brne 1b
 107               	/* #NOAPP */
 108               	.LBE4:
 110               	.Ltext2:
   1:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    All rights reserved.
   5:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
   6:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
   9:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  12:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****      distribution.
  16:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  17:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  21:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  33:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** /* $Id: delay.h,v 1.5 2007/10/28 23:25:56 joerg_wunsch Exp $ */
  34:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  35:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  38:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** #include <inttypes.h>
  39:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** #include <util/delay_basic.h>
  40:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  41:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** /** \file */
  42:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  43:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     \code
  44:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  45:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  46:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     #include <util/delay.h>
  47:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     \endcode
  48:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  49:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  50:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  51:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  52:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     used.
  53:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  54:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  55:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  56:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  57:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  58:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  59:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  60:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  61:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  62:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  63:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  64:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  65:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  66:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  67:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  68:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  69:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  70:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     routines linked into the application.
  71:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  72:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  73:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  74:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  75:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  76:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** */
  77:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  78:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  79:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  80:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  81:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** #endif
  82:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  83:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** #ifndef F_CPU
  84:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  85:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  86:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** # define F_CPU 1000000UL
  87:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** #endif
  88:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  89:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  90:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  91:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** #endif
  92:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  93:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** /**
  94:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    \ingroup util_delay
  95:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  96:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
  97:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
  98:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
  99:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 100:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
 101:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 102:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
 103:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 104:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 105:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    will not be informed about this case.
 106:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****  */
 107:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** void
 108:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** _delay_us(double __us)
 109:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** {
 110:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	uint8_t __ticks;
 111:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 3e6) * __us;
 112:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 113:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 		__ticks = 1;
 114:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	else if (__tmp > 255)
 115:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	{
 116:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 		_delay_ms(__us / 1000.0);
 117:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 		return;
 118:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	}
 119:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	else
 120:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 		__ticks = (uint8_t)__tmp;
 121:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	_delay_loop_1(__ticks);
 122:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** }
 123:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
 124:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
 125:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** /**
 126:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    \ingroup util_delay
 127:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
 128:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 129:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
 130:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 131:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 132:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
 133:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 134:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 
 135:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 136:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 137:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 138:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 139:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 140:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h ****  */
 141:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** void
 142:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** {
 144:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	double __tmp = ((F_CPU) / 4e3) * __ms;
 146:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	if (__tmp < 1.0)
 147:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 		__ticks = 1;
 148:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	else if (__tmp > 65535)
 149:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 	{
 150:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 151:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 152:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 		while(__ticks)
 153:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 		{
 154:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 			// wait 1/10 ms
 155:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 156:/opt/local/lib/gcc/avr/4.0.2/../../../../avr/include/util/delay.h **** 			__ticks --;
 112               	.LM4:
 113 001c 2150      		subi r18,lo8(-(-1))
 114 001e 3040      		sbci r19,hi8(-(-1))
 116               	.LM5:
 117 0020 D1F7      		brne .L2
 118               	.LBE3:
 119               	.LBE2:
 121               	.Ltext3:
  37:main.c        **** 	_delay_ms(500);
  38:main.c        **** 	PORTB = 0xff;
 123               	.LM6:
 124 0022 8FEF      		ldi r24,lo8(-1)
 125 0024 88BB      		out 56-0x20,r24
  39:main.c        **** 	
  40:main.c        **** 	//configure I/O
  41:main.c        **** 	//0b0011 1111
  42:main.c        **** 	DDRD  = 0x3f;
 127               	.LM7:
 128 0026 8FE3      		ldi r24,lo8(63)
 129 0028 81BB      		out 49-0x20,r24
  43:main.c        **** 	PORTD = 0x00;
 131               	.LM8:
 132 002a 12BA      		out 50-0x20,__zero_reg__
 133               	.LBB5:
 134               	.LBB6:
 135               	.LBB7:
 137               	.Ltext4:
 139               	.LM9:
 140 002c 8AE1      		ldi r24,lo8(26)
 141               	/* #APP */
 142 002e 8A95      		1: dec r24
 143 0030 F1F7      		brne 1b
 144               	/* #NOAPP */
 145               	.LBE7:
 146               	.LBE6:
 147               	.LBE5:
 149               	.Ltext5:
  44:main.c        **** 
  45:main.c        **** 	_delay_us(5);
  46:main.c        **** 	
  47:main.c        **** 	//clear framebuffer
  48:main.c        **** 	clear_fb(fb_r);
 151               	.LM10:
 152 0032 CE01      		movw r24,r28
 153 0034 0196      		adiw r24,1
 154 0036 00D0      		rcall clear_fb
  49:main.c        **** 	clear_fb(fb_g);
 156               	.LM11:
 157 0038 CE01      		movw r24,r28
 158 003a 8F5F      		subi r24,lo8(-(257))
 159 003c 9E4F      		sbci r25,hi8(-(257))
 160 003e 00D0      		rcall clear_fb
 161 0040 03E0      		ldi r16,lo8(3)
 162               	.L4:
  50:main.c        **** 
  51:main.c        **** 	for(x=3;x<13;x++){
  52:main.c        **** 	set_px(fb_g,3,x,1);
 164               	.LM12:
 165 0042 21E0      		ldi r18,lo8(1)
 166 0044 402F      		mov r20,r16
 167 0046 63E0      		ldi r22,lo8(3)
 168 0048 81E0      		ldi r24,lo8(257)
 169 004a 91E0      		ldi r25,hi8(257)
 170 004c 8C0F      		add r24,r28
 171 004e 9D1F      		adc r25,r29
 172 0050 00D0      		rcall set_px
  53:main.c        **** 	set_px(fb_g,4,x,2);
 174               	.LM13:
 175 0052 22E0      		ldi r18,lo8(2)
 176 0054 402F      		mov r20,r16
 177 0056 64E0      		ldi r22,lo8(4)
 178 0058 81E0      		ldi r24,lo8(257)
 179 005a 91E0      		ldi r25,hi8(257)
 180 005c 8C0F      		add r24,r28
 181 005e 9D1F      		adc r25,r29
 182 0060 00D0      		rcall set_px
  54:main.c        **** 	set_px(fb_g,5,x,3);
 184               	.LM14:
 185 0062 23E0      		ldi r18,lo8(3)
 186 0064 402F      		mov r20,r16
 187 0066 65E0      		ldi r22,lo8(5)
 188 0068 81E0      		ldi r24,lo8(257)
 189 006a 91E0      		ldi r25,hi8(257)
 190 006c 8C0F      		add r24,r28
 191 006e 9D1F      		adc r25,r29
 192 0070 00D0      		rcall set_px
  55:main.c        **** 
  56:main.c        **** 	set_px(fb_g,7,x,2);
 194               	.LM15:
 195 0072 22E0      		ldi r18,lo8(2)
 196 0074 402F      		mov r20,r16
 197 0076 67E0      		ldi r22,lo8(7)
 198 0078 81E0      		ldi r24,lo8(257)
 199 007a 91E0      		ldi r25,hi8(257)
 200 007c 8C0F      		add r24,r28
 201 007e 9D1F      		adc r25,r29
 202 0080 00D0      		rcall set_px
  57:main.c        **** 	set_px(fb_g,8,x,2);	
 204               	.LM16:
 205 0082 22E0      		ldi r18,lo8(2)
 206 0084 402F      		mov r20,r16
 207 0086 68E0      		ldi r22,lo8(8)
 208 0088 81E0      		ldi r24,lo8(257)
 209 008a 91E0      		ldi r25,hi8(257)
 210 008c 8C0F      		add r24,r28
 211 008e 9D1F      		adc r25,r29
 212 0090 00D0      		rcall set_px
  58:main.c        **** 	set_px(fb_r,7,x,2);
 214               	.LM17:
 215 0092 22E0      		ldi r18,lo8(2)
 216 0094 402F      		mov r20,r16
 217 0096 67E0      		ldi r22,lo8(7)
 218 0098 CE01      		movw r24,r28
 219 009a 0196      		adiw r24,1
 220 009c 00D0      		rcall set_px
  59:main.c        **** 	set_px(fb_r,8,x,2);
 222               	.LM18:
 223 009e 22E0      		ldi r18,lo8(2)
 224 00a0 402F      		mov r20,r16
 225 00a2 68E0      		ldi r22,lo8(8)
 226 00a4 CE01      		movw r24,r28
 227 00a6 0196      		adiw r24,1
 228 00a8 00D0      		rcall set_px
  60:main.c        **** 
  61:main.c        **** 	set_px(fb_g,6,x,3);
 230               	.LM19:
 231 00aa 23E0      		ldi r18,lo8(3)
 232 00ac 402F      		mov r20,r16
 233 00ae 66E0      		ldi r22,lo8(6)
 234 00b0 81E0      		ldi r24,lo8(257)
 235 00b2 91E0      		ldi r25,hi8(257)
 236 00b4 8C0F      		add r24,r28
 237 00b6 9D1F      		adc r25,r29
 238 00b8 00D0      		rcall set_px
  62:main.c        **** 	set_px(fb_g,9,x,2);	
 240               	.LM20:
 241 00ba 22E0      		ldi r18,lo8(2)
 242 00bc 402F      		mov r20,r16
 243 00be 69E0      		ldi r22,lo8(9)
 244 00c0 81E0      		ldi r24,lo8(257)
 245 00c2 91E0      		ldi r25,hi8(257)
 246 00c4 8C0F      		add r24,r28
 247 00c6 9D1F      		adc r25,r29
 248 00c8 00D0      		rcall set_px
  63:main.c        **** 	set_px(fb_r,6,x,2);
 250               	.LM21:
 251 00ca 22E0      		ldi r18,lo8(2)
 252 00cc 402F      		mov r20,r16
 253 00ce 66E0      		ldi r22,lo8(6)
 254 00d0 CE01      		movw r24,r28
 255 00d2 0196      		adiw r24,1
 256 00d4 00D0      		rcall set_px
  64:main.c        **** 	set_px(fb_r,9,x,3);
 258               	.LM22:
 259 00d6 23E0      		ldi r18,lo8(3)
 260 00d8 402F      		mov r20,r16
 261 00da 69E0      		ldi r22,lo8(9)
 262 00dc CE01      		movw r24,r28
 263 00de 0196      		adiw r24,1
 264 00e0 00D0      		rcall set_px
  65:main.c        **** 
  66:main.c        **** 	set_px(fb_r,10,x,3);
 266               	.LM23:
 267 00e2 23E0      		ldi r18,lo8(3)
 268 00e4 402F      		mov r20,r16
 269 00e6 6AE0      		ldi r22,lo8(10)
 270 00e8 CE01      		movw r24,r28
 271 00ea 0196      		adiw r24,1
 272 00ec 00D0      		rcall set_px
  67:main.c        **** 	set_px(fb_r,11,x,2);
 274               	.LM24:
 275 00ee 22E0      		ldi r18,lo8(2)
 276 00f0 402F      		mov r20,r16
 277 00f2 6BE0      		ldi r22,lo8(11)
 278 00f4 CE01      		movw r24,r28
 279 00f6 0196      		adiw r24,1
 280 00f8 00D0      		rcall set_px
  68:main.c        **** 	set_px(fb_r,12,x,1);
 282               	.LM25:
 283 00fa 21E0      		ldi r18,lo8(1)
 284 00fc 402F      		mov r20,r16
 285 00fe 6CE0      		ldi r22,lo8(12)
 286 0100 CE01      		movw r24,r28
 287 0102 0196      		adiw r24,1
 288 0104 00D0      		rcall set_px
 290               	.LM26:
 291 0106 0F5F      		subi r16,lo8(-(1))
 292 0108 0D30      		cpi r16,lo8(13)
 293 010a 09F0      		breq .+2
 294 010c 9ACF      		rjmp .L4
  69:main.c        **** 
  70:main.c        **** 	}
  71:main.c        **** 
  72:main.c        **** 
  73:main.c        **** 
  74:main.c        **** 	//TOGGLE BRIGHT AND RESET LINE
  75:main.c        ****   	PORTD |= (1<<BRT) | (1<<RST);
 296               	.LM27:
 297 010e 82B3      		in r24,50-0x20
 298 0110 8861      		ori r24,lo8(24)
 299 0112 82BB      		out 50-0x20,r24
 300               	.LBB8:
 301               	.LBB9:
 302               	.LBB10:
 304               	.Ltext6:
 306               	.LM28:
 307 0114 95E0      		ldi r25,lo8(5)
 308 0116 892F      		mov r24,r25
 309               	/* #APP */
 310 0118 8A95      		1: dec r24
 311 011a F1F7      		brne 1b
 312               	/* #NOAPP */
 313               	.LBE10:
 314               	.LBE9:
 315               	.LBE8:
 317               	.Ltext7:
  76:main.c        **** 	_delay_us(1);
  77:main.c        **** 
  78:main.c        **** 	PORTD &= ~ ( (1<<BRT) | (1<<RST) );
 319               	.LM29:
 320 011c 82B3      		in r24,50-0x20
 321 011e 877E      		andi r24,lo8(-25)
 322 0120 82BB      		out 50-0x20,r24
 323               	.LBB11:
 324               	.LBB12:
 325               	.LBB13:
 327               	.Ltext8:
 329               	.LM30:
 330 0122 892F      		mov r24,r25
 331               	/* #APP */
 332 0124 8A95      		1: dec r24
 333 0126 F1F7      		brne 1b
 334               	/* #NOAPP */
 335               	.LBE13:
 336               	.LBE12:
 337               	.LBE11:
 339               	.Ltext9:
  79:main.c        **** 	_delay_us(1);
  80:main.c        **** 	
  81:main.c        **** 	//SELECT DATA INPUT, requires continous dataflow..
  82:main.c        **** 	//We should implement "write frame" and "keep alive" functions. 
  83:main.c        **** 	//When Select ist low, matrix shows data from internal buffer. matrix then only needs clock signal
  84:main.c        **** 	PORTD |= (1<<SEL);
 341               	.LM31:
 342 0128 959A      		sbi 50-0x20,5
 343               	.LBB14:
 344               	.LBB15:
 345               	.LBB16:
 347               	.Ltext10:
 349               	.LM32:
 350 012a 892F      		mov r24,r25
 351               	/* #APP */
 352 012c 8A95      		1: dec r24
 353 012e F1F7      		brne 1b
 354               	/* #NOAPP */
 355               	.LBE16:
 356               	.LBE15:
 357               	.LBE14:
 359               	.Ltext11:
  85:main.c        **** 	_delay_us(1);
  86:main.c        **** 	
  87:main.c        **** 	//as in datasheet: BRIGHT HIGH
  88:main.c        **** 	PORTD |= (1<<BRT);
 361               	.LM33:
 362 0130 939A      		sbi 50-0x20,3
 363               	.LBB17:
 364               	.LBB18:
 365               	.LBB19:
 367               	.Ltext12:
 369               	.LM34:
 370               	/* #APP */
 371 0132 9A95      		1: dec r25
 372 0134 F1F7      		brne 1b
 373               	/* #NOAPP */
 374 0136 35E2      		ldi r19,lo8(37)
 375 0138 E32E      		mov r14,r19
 376 013a 21E0      		ldi r18,lo8(1)
 377 013c A22E      		mov r10,r18
 378 013e B12C      		mov r11,__zero_reg__
 379 0140 6E01      		movw r12,r28
 380 0142 0894      		sec
 381 0144 C11C      		adc r12,__zero_reg__
 382 0146 D11C      		adc r13,__zero_reg__
 383               	.L6:
 384 0148 60E0      		ldi r22,lo8(0)
 385 014a 70E0      		ldi r23,hi8(0)
 386               	.L7:
 387 014c 40E0      		ldi r20,lo8(0)
 388 014e 50E0      		ldi r21,hi8(0)
 389 0150 8501      		movw r16,r10
 390 0152 062E      		mov r0,r22
 391 0154 02C0      		rjmp 2f
 392 0156 000F      	1:	lsl r16
 393 0158 111F      		rol r17
 394 015a 0A94      	2:	dec r0
 395 015c E2F7      		brpl 1b
 396               	.L8:
 397               	.LBE19:
 398               	.LBE18:
 399               	.LBE17:
 401               	.Ltext13:
  89:main.c        **** 	_delay_us(1);
  90:main.c        **** 
  91:main.c        ****   	//MAIN LOOP
  92:main.c        **** 	//code implemented as described in datasheet timing diagram, page 295
  93:main.c        **** 
  94:main.c        ****   	while(1)
  95:main.c        **** 	{
  96:main.c        **** 
  97:main.c        **** //		scroll_h(fb_r,'l');
  98:main.c        **** //		scroll_v(fb_g,'u');
  99:main.c        **** 
 100:main.c        **** 		for(brt_loop=0; brt_loop<16;brt_loop++)
 101:main.c        **** 		{
 102:main.c        **** 	
 103:main.c        **** 			for(y=0; y<16; y++)
 104:main.c        **** 			{	
 105:main.c        **** 				//PULL BRIGHTNESS UP, AS IN DATASHEET
 106:main.c        **** 				PORTD |= (1<<BRT);
 403               	.LM35:
 404 015e 939A      		sbi 50-0x20,3
 405               	.LBB20:
 406               	.LBB21:
 407               	.LBB22:
 409               	.Ltext14:
 411               	.LM36:
 412 0160 8E2D      		mov r24,r14
 413               	/* #APP */
 414 0162 8A95      		1: dec r24
 415 0164 F1F7      		brne 1b
 416               	/* #NOAPP */
 417 0166 D601      		movw r26,r12
 418 0168 A40F      		add r26,r20
 419 016a B51F      		adc r27,r21
 420 016c 9E01      		movw r18,r28
 421 016e 2F5F      		subi r18,lo8(-(257))
 422 0170 3E4F      		sbci r19,hi8(-(257))
 423 0172 240F      		add r18,r20
 424 0174 351F      		adc r19,r21
 425 0176 FF24      		clr r15
 426               	.L9:
 427               	.LBE22:
 428               	.LBE21:
 429               	.LBE20:
 431               	.Ltext15:
 107:main.c        **** 				_delay_us(7);
 108:main.c        **** 				for(x=0; x<16; x++)
 109:main.c        **** 				{
 110:main.c        **** 					//IF RED PX IS SET IN FB:
 111:main.c        **** 					PORTD &= ~(1<<RED);
 433               	.LM37:
 434 0178 9098      		cbi 50-0x20,0
 112:main.c        **** 		
 113:main.c        **** 					if( gamma_table[fb_r[x][y]] & (1<<brt_loop) )
 436               	.LM38:
 437 017a EC91      		ld r30,X
 438 017c FF27      		clr r31
 439 017e EE0F      		lsl r30
 440 0180 FF1F      		rol r31
 441 0182 E050      		subi r30,lo8(-(gamma_table))
 442 0184 F040      		sbci r31,hi8(-(gamma_table))
 443 0186 8081      		ld r24,Z
 444 0188 9181      		ldd r25,Z+1
 445 018a 8023      		and r24,r16
 446 018c 9123      		and r25,r17
 447 018e 892B      		or r24,r25
 448 0190 09F0      		breq .L10
 114:main.c        **** 					{
 115:main.c        **** 						//SET RED DATA LINE LOW
 116:main.c        **** 						PORTD |= (1<<RED);
 450               	.LM39:
 451 0192 909A      		sbi 50-0x20,0
 452               	.L10:
 117:main.c        **** 					}
 118:main.c        **** 		
 119:main.c        **** 		
 120:main.c        **** 					//IF GREEN PX IS SET IN FB:
 121:main.c        **** 		                      	PORTD &= ~(1<<GRN);
 454               	.LM40:
 455 0194 9198      		cbi 50-0x20,1
 122:main.c        **** 	                        
 123:main.c        **** 					if( gamma_table[fb_g[x][y]] & (1<<brt_loop) )
 457               	.LM41:
 458 0196 F901      		movw r30,r18
 459 0198 8081      		ld r24,Z
 460 019a E82F      		mov r30,r24
 461 019c FF27      		clr r31
 462 019e EE0F      		lsl r30
 463 01a0 FF1F      		rol r31
 464 01a2 E050      		subi r30,lo8(-(gamma_table))
 465 01a4 F040      		sbci r31,hi8(-(gamma_table))
 466 01a6 8081      		ld r24,Z
 467 01a8 9181      		ldd r25,Z+1
 468 01aa 8023      		and r24,r16
 469 01ac 9123      		and r25,r17
 470 01ae 892B      		or r24,r25
 471 01b0 09F0      		breq .L12
 124:main.c        **** 		                        {
 125:main.c        **** 						//SET GREEN DATA LINE LOW
 126:main.c        **** 		                                PORTD |= (1<<GRN);
 473               	.LM42:
 474 01b2 919A      		sbi 50-0x20,1
 475               	.L12:
 127:main.c        **** 		                        }
 128:main.c        **** 		
 129:main.c        **** 					//TOGGLE CLOCK LINE
 130:main.c        **** 					PORTD |= (1<<CLK);
 477               	.LM43:
 478 01b4 929A      		sbi 50-0x20,2
 131:main.c        **** 					
 132:main.c        **** 					PORTD &= ~(1<<CLK);
 480               	.LM44:
 481 01b6 9298      		cbi 50-0x20,2
 483               	.LM45:
 484 01b8 F394      		inc r15
 485 01ba 5096      		adiw r26,16
 486 01bc 205F      		subi r18,lo8(-(16))
 487 01be 3F4F      		sbci r19,hi8(-(16))
 488 01c0 F0E1      		ldi r31,lo8(16)
 489 01c2 FF16      		cp r15,r31
 490 01c4 C9F6      		brne .L9
 491 01c6 80E1      		ldi r24,lo8(16)
 492               	.LBB23:
 493               	.LBB24:
 494               	.LBB25:
 496               	.Ltext16:
 498               	.LM46:
 499               	/* #APP */
 500 01c8 8A95      		1: dec r24
 501 01ca F1F7      		brne 1b
 502               	/* #NOAPP */
 503               	.LBE25:
 504               	.LBE24:
 505               	.LBE23:
 507               	.Ltext17:
 133:main.c        **** 				}
 134:main.c        **** 	
 135:main.c        **** 				//PULL BRIGHTNESS LOW, AS IN DATASHEET
 136:main.c        **** 				_delay_us(3);
 137:main.c        **** 				PORTD &= ~(1<<BRT);
 509               	.LM47:
 510 01cc 9398      		cbi 50-0x20,3
 511               	.LBB26:
 512               	.LBB27:
 513               	.LBB28:
 515               	.Ltext18:
 517               	.LM48:
 518 01ce 80E2      		ldi r24,lo8(32)
 519               	/* #APP */
 520 01d0 8A95      		1: dec r24
 521 01d2 F1F7      		brne 1b
 522               	/* #NOAPP */
 523 01d4 4F5F      		subi r20,lo8(-(1))
 524 01d6 5F4F      		sbci r21,hi8(-(1))
 525               	.LBE28:
 526               	.LBE27:
 527               	.LBE26:
 529               	.Ltext19:
 531               	.LM49:
 532 01d8 4031      		cpi r20,16
 533 01da 5105      		cpc r21,__zero_reg__
 534 01dc 09F0      		breq .+2
 535 01de BFCF      		rjmp .L8
 138:main.c        **** 				_delay_us(6);
 139:main.c        **** 		
 140:main.c        **** 				
 141:main.c        **** 			}
 142:main.c        **** 			PORTD |= (1<<BRT);
 537               	.LM50:
 538 01e0 939A      		sbi 50-0x20,3
 539 01e2 6F5F      		subi r22,lo8(-(1))
 540 01e4 7F4F      		sbci r23,hi8(-(1))
 542               	.LM51:
 543 01e6 6031      		cpi r22,16
 544 01e8 7105      		cpc r23,__zero_reg__
 545 01ea 09F0      		breq .+2
 546 01ec AFCF      		rjmp .L7
 547 01ee ACCF      		rjmp .L6
 548               	/* epilogue: frame size=512 */
 549               	/* epilogue: noreturn */
 550               	/* epilogue end (size=0) */
 551               	/* function main size 268 (264) */
 588               	.Lscope0:
 590               		.stabd	78,0,0
 592               	.Letext0:
 593               	/* File "main.c": code  268 = 0x010c ( 264), prologues   4, epilogues   0 */
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/sA/sAHseDBTFXK0vIyJlwAPOU+++TI/-Tmp-//ccpcmYXP.s:3      *ABS*:0000003f __SREG__
/var/folders/sA/sAHseDBTFXK0vIyJlwAPOU+++TI/-Tmp-//ccpcmYXP.s:4      *ABS*:0000003e __SP_H__
/var/folders/sA/sAHseDBTFXK0vIyJlwAPOU+++TI/-Tmp-//ccpcmYXP.s:5      *ABS*:0000003d __SP_L__
/var/folders/sA/sAHseDBTFXK0vIyJlwAPOU+++TI/-Tmp-//ccpcmYXP.s:6      *ABS*:00000000 __tmp_reg__
/var/folders/sA/sAHseDBTFXK0vIyJlwAPOU+++TI/-Tmp-//ccpcmYXP.s:7      *ABS*:00000001 __zero_reg__
/var/folders/sA/sAHseDBTFXK0vIyJlwAPOU+++TI/-Tmp-//ccpcmYXP.s:74     .text:00000000 main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__stack
clear_fb
set_px
gamma_table
